{
  "resourceType": "TestScript",
  "id": "hospitalnotification-an-staa",
  "meta": {
    "profile": [
      "http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"
    ]
  },
  "url": "medcom.dk",
  "status": "active",
  "date": "2022-07-13",
  "publisher": "MedCom",
  "contact": [
    {
      "name": "MedCom",
      "telecom": [
        {
          "system": "email",
          "value": "fhir@medcom.dk",
          "use": "work"
        }
      ]
    }
  ],
  "copyright": "MedCom 2021",
  "name": "Cancellation of start hospital stayacute ambulant",
  "title": "Cancellation of start hospital stay acute ambulant send - AN_STAA",
  "description": "Testing correct use of status stay-acute ambulant",
  "origin": [
    {
      "index": 1,
      "profile": {
        "system": "http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types",
        "code": "FHIR-Client"
      }
    }
  ],
  "destination": [
    {
      "index": 1,
      "profile": {
        "system": "http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types",
        "code": "FHIR-Server"
      }
    }
  ],
  "fixture": [
    {
      "id": "create-STAA-01",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/HospitalNotificationTMS/fixtureHospitalNotificationSTAA.xml"
      }
    },
    {
      "id": "cancel-AN-STAA-01",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/HospitalNotificationTMS/fixtureHospitalNotificationAN-STAA.xml"
      }
    }
  ],
  "profile": [
    {
      "id": "hospitalnotification",
      "reference": "http://medcomfhir.dk/fhir/carecommunication/StructureDefinition/medcom-careCommunication-message"
    }
  ],
  "variable": [
    {
      "name": "headerResourceReference",
      "expression": "Bundle.entry[0].fullUrl",
      "sourceId": "create-STAA-01"
    },
    {
      "name": "destinationUri",
      "expression": "Bundle.entry.resource.ofType(MessageHeader).destination.endpoint",
      "sourceId": "create-STAA-01"
    },
    {
      "name": "searchParamIdentifier",
      "expression": "Bundle.entry.resource.ofType(MessageHeader).id",
      "sourceId": "create-STAA-01"
    }
  ],
  "setup": {
    "action": [
      {
        "operation": {
          "type": {
            "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
            "code": "delete"
          },
          "resource": "Bundle",
          "description": "System-generated search and delete operations from conditional delete on Bundle MessageHeader.destination.endpoint",
          "accept": "xml",
          "encodeRequestUrl": true,
          "params": "?message.destination-uri=${destinationUri}"
        }
      },
      {
        "operation": {
          "type": {
            "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
            "code": "create"
          },
          "resource": "Bundle",
          "description": "Create the Bundle resource in XML format on the destination server.",
          "accept": "xml",
          "contentType": "xml",
          "encodeRequestUrl": true,
          "sourceId": "create-STAA-01"
        }
      },
      {
        "assert": {
          "description": "Confirm that the returned HTTP status is okay or created.",
          "direction": "response",
          "responseCode": "200,201",
          "operator": "in",
          "warningOnly": false
        }
      }
    ]
  },
  "test": [
    {
      "id": "hospitalnotification-cancel-AN-STAA-01",
      "name": "Cancel a a HospitalNotification Message 01",
      "description": "Cancelling an existing message",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "deleteCondSingle"
            },
            "resource": "Bundle",
            "description": "Cancel a message",
            "accept": "xml",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "params": "?identifier=${searchParamIdentifier}"
          }
        },
        {
          "assert": {
            "description": "Confirm that the returned HTTP status is okay or created.",
            "direction": "response",
            "responseCode": "200,201",
            "operator": "in",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the previous MessageHeader fullURL is identical to Provenanve.entity.what",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Provenance).entity.what.reference",
            "operator": "equals",
            "value": "${headerResourceReference}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the role is set to removal. Not used when testing the first message in a stream",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Provenance).entity.role",
            "operator": "equals",
            "value": "removal",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Encounter class of the request resource is EMER.",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Encounter).class.code",
            "operator": "equals",
            "value": "EMER",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Encounter status of the request resource is entered-in-error.",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Encounter).status",
            "operator": "equals",
            "value": "entered-in-error",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the request resource contains the expected activity code.",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Provenance).where(activity.coding.code = 'cancel-admit-emergency').exists()",
            "warningOnly": false
          }
        }
      ]
    }
  ]
}
