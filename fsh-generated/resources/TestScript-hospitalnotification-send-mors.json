{
  "resourceType": "TestScript",
  "id": "hospitalnotification-send-mors",
  "meta": {
    "profile": [
      "http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"
    ]
  },
  "status": "active",
  "date": "2023-08-14",
  "publisher": "MedCom",
  "contact": [
    {
      "name": "MedCom",
      "telecom": [
        {
          "system": "email",
          "value": "mailto:fhir@medcom.dk"
        },
        {
          "system": "url",
          "value": "https://medcom.dk/"
        }
      ]
    }
  ],
  "copyright": "MedCom 2021",
  "description": "Send: Deceased - dead at arrival to the hospital.",
  "title": "Send: Deceased - dead at arrival to the hospital - MORS",
  "url": "http://medcomfhir.dk/ig/hospitalnotificationtestscript/hospitalnotification-send-mors",
  "name": "HospitalNotificationTestScript",
  "origin": [
    {
      "index": 1,
      "profile": {
        "system": "http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types",
        "code": "FHIR-Client"
      }
    }
  ],
  "destination": [
    {
      "index": 1,
      "profile": {
        "system": "http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types",
        "code": "FHIR-Server"
      }
    }
  ],
  "profile": [
    {
      "id": "hospitalnotification",
      "reference": "http://medcomfhir.dk/ig/hospitalnotification/StructureDefinition/medcom-hospitalNotification-message"
    }
  ],
  "fixture": [
    {
      "id": "create-MORS-01",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/HospitalNotification/v300-send/Fixtures/HospitalNotification-fixture.xml"
      }
    }
  ],
  "variable": [
    {
      "name": "messageHeaderid-MORS",
      "expression": "Bundle.entry[0].resource.id",
      "sourceId": "create-message-MORS"
    },
    {
      "name": "episodeOfCareID-MORS",
      "expression": "Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value",
      "sourceId": "create-message-MORS"
    },
    {
      "name": "searchParamIdentifier-MORS",
      "expression": "Bundle.entry.resource.ofType(MessageHeader).id",
      "sourceId": "create-message-MORS"
    }
  ],
  "test": [
    {
      "id": "hospitalnotification-create-MORS-01",
      "name": "Create a HospitalNotification MORS Message 01",
      "description": "Post HospitalNotification to the server.",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "create"
            },
            "resource": "Bundle",
            "description": "Post a Hospitalnotification",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "responseId": "create-message-MORS",
            "sourceId": "create-MORS-01"
          }
        },
        {
          "assert": {
            "description": "Confirm that the returned HTTP status is okay or created.",
            "direction": "response",
            "responseCode": "200,201",
            "operator": "in",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the client request payload contains a Bundle resource type.",
            "direction": "request",
            "resource": "Bundle",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Validates the bundle against http://medcomfhir.dk/ig/hospitalnotification/ImplementationGuide/dk.fhir.ig.dk-medcom-hospitalnotification",
            "direction": "request",
            "validateProfileId": "hospitalnotification",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the request resource contains the expected eventCoding.code.",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Encounter class of the request resource is IMP.",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Encounter).class.code",
            "operator": "equals",
            "value": "IMP",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Encounter status of the request resource is in-progress.",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Encounter).status",
            "operator": "equals",
            "value": "in-progress",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the request resource contains the expected activity code.",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Provenance).where(activity.coding.code = 'admit-inpatient').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the report of admission flag is false.",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(MessageHeader).extension.where(url='http://medcomfhir.dk/ig/hospitalnotification/StructureDefinition/medcom-messaging-reportOfAdmissionExtension').value",
            "operator": "equals",
            "value": "false",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the target reference in Provenance equals MessageHeader.id",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Provenance).where(target.reference.contains(%resource.entry[0].resource.id)).exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the episodeOfCare-identifier has the structure of an UUID",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value.matches('^[0-9(a-f|A-F)]{8}-[0-9(a-f|A-F)]{4}-4[0-9(a-f|A-F)]{3}-[89ab][0-9(a-f|A-F)]{3}-[0-9(a-f|A-F)]{12}$') or Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.system = 'https://www.esundhed.dk/Registre/Landspatientregisteret'",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the a receiver of the report of admission exists, when the flag is true, and doesn't exists when the flag is false.",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(MessageHeader).extension.where(url='http://medcomfhir.dk/ig/hospitalnotification/StructureDefinition/medcom-messaging-reportOfAdmissionRecipientExtension').exists() = false",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the patient.deceased is set to true",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Patient).deceased",
            "operator": "equals",
            "value": "true",
            "warningOnly": false
          }
        }
      ]
    }
  ]
}
