@prefix fhir: <http://hl7.org/fhir/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# - resource -------------------------------------------------------------------

<http://example.org/fhir/fish/TestScript/UFHV13-with-ACK> a fhir:TestScript;
  fhir:nodeRole fhir:treeRoot;
  fhir:Resource.id [ fhir:value "UFHV13-with-ACK"];
  fhir:Resource.meta [
     fhir:Meta.profile [
       fhir:value "http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript";
       fhir:index 0;
       fhir:link <http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript>
     ]
  ];
  fhir:DomainResource.text [
     fhir:Narrative.status [ fhir:value "generated" ];
     fhir:Narrative.div "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative</b></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource \"UFHV13-with-ACK\" </p><p style=\"margin-bottom: 0px\">Profile: <code>http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript</code></p></div><p><b>url</b>: <code>http://build.fhir.org/ig/hl7dk/dk-medcom/</code></p><p><b>version</b>: 0.1.0</p><p><b>name</b>: Patient dies upon arrival at the hospital</p><p><b>title</b>: Patient dies upon arrival at the hospital</p><p><b>status</b>: active</p><p><b>date</b>: 2021-11-01</p><p><b>publisher</b>: MedCom</p><p><b>contact</b>: MedCom: <a href=\"mailto:fhir@medcom.dk\">fhir@medcom.dk</a></p><p><b>description</b>: Testing correct use of correction</p><p><b>copyright</b>: MedCom 2021</p><h3>Origins</h3><table class=\"grid\"><tr><td>-</td><td><b>Index</b></td><td><b>Profile</b></td></tr><tr><td>*</td><td>1</td><td>FHIR Client (Details: http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types code FHIR-Client = 'FHIR Client', stated as 'null')</td></tr></table><h3>Destinations</h3><table class=\"grid\"><tr><td>-</td><td><b>Index</b></td><td><b>Profile</b></td></tr><tr><td>*</td><td>1</td><td>FHIR Server (Details: http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types code FHIR-Server = 'FHIR Server', stated as 'null')</td></tr></table><blockquote><p><b>fixture</b></p><p><b>autocreate</b>: false</p><p><b>autodelete</b>: false</p><p><b>resource</b>: <a href=\"/FHIRSandbox/MedCom/401-Acknowledgement/_reference/resources/Acknowledgement-ok.xml\">/FHIRSandbox/MedCom/401-Acknowledgement/_reference/resources/Acknowledgement-ok.xml</a></p></blockquote><blockquote><p><b>fixture</b></p><p><b>autocreate</b>: false</p><p><b>autodelete</b>: false</p><p><b>resource</b>: <a href=\"/FHIRSandbox/MedCom/401-Hospitalnotification/receive/Userstory/_reference/resources/MORS_1.xml\">/FHIRSandbox/MedCom/401-Hospitalnotification/receive/Userstory/_reference/resources/MORS_1.xml</a></p></blockquote><p><b>profile</b>: <a href=\"http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-hospitalNotification-message\">http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-hospitalNotification-message</a></p><blockquote><p><b>variable</b></p><p><b>name</b>: destinationUri1</p><p><b>expression</b>: Bundle.entry.resource.ofType(MessageHeader).destination.endpoint</p><p><b>sourceId</b>: bundle-create-MORS1</p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: correctMessageID1</p><p><b>expression</b>: Bundle.entry.resource.ofType(Bundle).id</p><p><b>sourceId</b>: bundle-get-MORS1</p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: MessageHeaderIdentifier1</p><p><b>expression</b>: Bundle.entry[0].fullUrl</p><p><b>sourceId</b>: bundle-create-MORS1</p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: ProvenanceID1</p><p><b>expression</b>: Bundle.entry.resource.ofType(Provenance).id</p><p><b>sourceId</b>: bundle-create-MORS1</p></blockquote><blockquote><p><b>setup</b></p><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>EncodeRequestUrl</b></td><td><b>Params</b></td></tr><tr><td>*</td><td>Delete (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code delete = 'Delete', stated as 'null')</td><td>Bundle</td><td>System-generated search and delete operations from conditional delete on Bundle MessageHeader).destination.endpoint</td><td>xml</td><td>true</td><td>?message.destination-uri=${destinationUri1}</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>ContentType</b></td><td><b>EncodeRequestUrl</b></td><td><b>SourceId</b></td></tr><tr><td>*</td><td>Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')</td><td>Bundle</td><td>Create the Bundle resource in XML format on the destination server.</td><td>xml</td><td>xml</td><td>true</td><td>bundle-create-MORS1</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: HospitalNotification-MORS1</p><p><b>description</b>: GET a Hospital notification MORS. The expected response is a 200(OK) with a payload of the Hospital notification resource in XML format.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>Destination</b></td><td><b>EncodeRequestUrl</b></td><td><b>Origin</b></td><td><b>Params</b></td><td><b>ResponseId</b></td></tr><tr><td>*</td><td>Read (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code read = 'Read', stated as 'null')</td><td>Bundle</td><td>Receive notification-MORS</td><td>xml</td><td>1</td><td>true</td><td>1</td><td>?message.destination-uri=${destinationUri1}</td><td>bundle-get-MORS1</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>ResponseCode</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the returned HTTP status is 200(OK).</td><td>response</td><td>200</td><td>false</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: 1 Post Acknowledgement-bundle-create-MORS1</p><p><b>description</b>: GET ACK</p><blockquote><p><b>action</b></p><h3>Operations</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>Destination</b></td><td><b>EncodeRequestUrl</b></td><td><b>Origin</b></td><td><b>SourceId</b></td></tr><tr><td>*</td><td>Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')</td><td>Bundle</td><td>Post a acknowledgement</td><td>xml</td><td>1</td><td>true</td><td>1</td><td>bundle-create-ack-OK</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Resource</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the client request payload contains a Bundle resource type.</td><td>request</td><td>Bundle</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the MessageHeader response code is OK</td><td>request</td><td>Bundle.entry.resource.ofType(MessageHeader).response.code</td><td>equals</td><td>ok</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the request resource contains the expected evetCoding code.</td><td>request</td><td>Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'acknowledgment-message').allTrue()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the Bundle not containing a OperationOutcome</td><td>request</td><td>Bundle.entry.resource.ofType(OperationOutcome).exists().not()</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>Operator</b></td><td><b>Value</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the MessageHeader.response.identifier is equal to Id of original message </td><td>request</td><td>Bundle.entry.resource.ofType(MessageHeader).response.identifier</td><td>equals</td><td>${correctMessageID1}</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the reference original Provenance.entity.what is equal to Id of original messageheader.identifier</td><td>request</td><td>Bundle.entry.resource.ofType(Provenance).where(entity.what.reference ='${MessageHeaderIdentifier1}')</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the there are two Provenances</td><td>request</td><td>Bundle.entry.resource.ofType(Provenance).count() = 2</td><td>false</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table class=\"grid\"><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Expression</b></td><td><b>WarningOnly</b></td></tr><tr><td>*</td><td>Confirm that the id of the original message provenance exist in the ack</td><td>request</td><td>Bundle.entry.resource.ofType(Provenance).where(id='${ProvenanceID1}').exists()</td><td>false</td></tr></table></blockquote></blockquote></div>"
  ];
  fhir:TestScript.url [ fhir:value "http://build.fhir.org/ig/hl7dk/dk-medcom/"];
  fhir:TestScript.version [ fhir:value "0.1.0"];
  fhir:TestScript.name [ fhir:value "Patient dies upon arrival at the hospital"];
  fhir:TestScript.title [ fhir:value "Patient dies upon arrival at the hospital"];
  fhir:TestScript.status [ fhir:value "active"];
  fhir:TestScript.date [ fhir:value "2021-11-01"^^xsd:date];
  fhir:TestScript.publisher [ fhir:value "MedCom"];
  fhir:TestScript.contact [
     fhir:index 0;
     fhir:ContactDetail.name [ fhir:value "MedCom" ];
     fhir:ContactDetail.telecom [
       fhir:index 0;
       fhir:ContactPoint.system [ fhir:value "email" ];
       fhir:ContactPoint.value [ fhir:value "fhir@medcom.dk" ]
     ]
  ];
  fhir:TestScript.description [ fhir:value "Testing correct use of correction"];
  fhir:TestScript.copyright [ fhir:value "MedCom 2021"];
  fhir:TestScript.origin [
     fhir:index 0;
     fhir:TestScript.origin.index [ fhir:value "1"^^xsd:integer ];
     fhir:TestScript.origin.profile [
       fhir:Coding.system [ fhir:value "http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types" ];
       fhir:Coding.code [ fhir:value "FHIR-Client" ]
     ]
  ];
  fhir:TestScript.destination [
     fhir:index 0;
     fhir:TestScript.destination.index [ fhir:value "1"^^xsd:integer ];
     fhir:TestScript.destination.profile [
       fhir:Coding.system [ fhir:value "http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types" ];
       fhir:Coding.code [ fhir:value "FHIR-Server" ]
     ]
  ];
  fhir:TestScript.fixture [
     fhir:index 0;
     fhir:Element.id [ fhir:value "bundle-create-ack-OK" ];
     fhir:TestScript.fixture.autocreate [ fhir:value "false"^^xsd:boolean ];
     fhir:TestScript.fixture.autodelete [ fhir:value "false"^^xsd:boolean ];
     fhir:TestScript.fixture.resource [
       fhir:link <http://example.org/fhir/fish//FHIRSandbox/MedCom/401-Acknowledgement/_reference/resources/Acknowledgement-ok.xml>;
       fhir:Reference.reference [ fhir:value "/FHIRSandbox/MedCom/401-Acknowledgement/_reference/resources/Acknowledgement-ok.xml" ]
     ]
  ], [
     fhir:index 1;
     fhir:Element.id [ fhir:value "bundle-create-MORS1" ];
     fhir:TestScript.fixture.autocreate [ fhir:value "false"^^xsd:boolean ];
     fhir:TestScript.fixture.autodelete [ fhir:value "false"^^xsd:boolean ];
     fhir:TestScript.fixture.resource [
       fhir:link <http://example.org/fhir/fish//FHIRSandbox/MedCom/401-Hospitalnotification/receive/Userstory/_reference/resources/MORS_1.xml>;
       fhir:Reference.reference [ fhir:value "/FHIRSandbox/MedCom/401-Hospitalnotification/receive/Userstory/_reference/resources/MORS_1.xml" ]
     ]
  ];
  fhir:TestScript.profile [
     fhir:index 0;
     fhir:link <http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-hospitalNotification-message>;
     fhir:Element.id [ fhir:value "hospitalnotification-profile" ];
     fhir:Reference.reference [ fhir:value "http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-hospitalNotification-message" ]
  ];
  fhir:TestScript.variable [
     fhir:index 0;
     fhir:TestScript.variable.name [ fhir:value "destinationUri1" ];
     fhir:TestScript.variable.expression [ fhir:value "Bundle.entry.resource.ofType(MessageHeader).destination.endpoint" ];
     fhir:TestScript.variable.sourceId [ fhir:value "bundle-create-MORS1" ]
  ], [
     fhir:index 1;
     fhir:TestScript.variable.name [ fhir:value "correctMessageID1" ];
     fhir:TestScript.variable.expression [ fhir:value "Bundle.entry.resource.ofType(Bundle).id" ];
     fhir:TestScript.variable.sourceId [ fhir:value "bundle-get-MORS1" ]
  ], [
     fhir:index 2;
     fhir:TestScript.variable.name [ fhir:value "MessageHeaderIdentifier1" ];
     fhir:TestScript.variable.expression [ fhir:value "Bundle.entry[0].fullUrl" ];
     fhir:TestScript.variable.sourceId [ fhir:value "bundle-create-MORS1" ]
  ], [
     fhir:index 3;
     fhir:TestScript.variable.name [ fhir:value "ProvenanceID1" ];
     fhir:TestScript.variable.expression [ fhir:value "Bundle.entry.resource.ofType(Provenance).id" ];
     fhir:TestScript.variable.sourceId [ fhir:value "bundle-create-MORS1" ]
  ];
  fhir:TestScript.setup [
     fhir:TestScript.setup.action [
       fhir:index 0;
       fhir:TestScript.setup.action.operation [
         fhir:TestScript.setup.action.operation.type [
           fhir:Coding.system [ fhir:value "http://terminology.hl7.org/CodeSystem/testscript-operation-codes" ];
           fhir:Coding.code [ fhir:value "delete" ]
         ];
         fhir:TestScript.setup.action.operation.resource [ fhir:value "Bundle" ];
         fhir:TestScript.setup.action.operation.description [ fhir:value "System-generated search and delete operations from conditional delete on Bundle MessageHeader).destination.endpoint" ];
         fhir:TestScript.setup.action.operation.accept [ fhir:value "xml" ];
         fhir:TestScript.setup.action.operation.encodeRequestUrl [ fhir:value "true"^^xsd:boolean ];
         fhir:TestScript.setup.action.operation.params [ fhir:value "?message.destination-uri=${destinationUri1}" ]
       ]
     ], [
       fhir:index 1;
       fhir:TestScript.setup.action.operation [
         fhir:TestScript.setup.action.operation.type [
           fhir:Coding.system [ fhir:value "http://terminology.hl7.org/CodeSystem/testscript-operation-codes" ];
           fhir:Coding.code [ fhir:value "create" ]
         ];
         fhir:TestScript.setup.action.operation.resource [ fhir:value "Bundle" ];
         fhir:TestScript.setup.action.operation.description [ fhir:value "Create the Bundle resource in XML format on the destination server." ];
         fhir:TestScript.setup.action.operation.accept [ fhir:value "xml" ];
         fhir:TestScript.setup.action.operation.contentType [ fhir:value "xml" ];
         fhir:TestScript.setup.action.operation.encodeRequestUrl [ fhir:value "true"^^xsd:boolean ];
         fhir:TestScript.setup.action.operation.sourceId [ fhir:value "bundle-create-MORS1" ]
       ]
     ]
  ];
  fhir:TestScript.test [
     fhir:index 0;
     fhir:Element.id [ fhir:value "1-MORS-admitted" ];
     fhir:TestScript.test.name [ fhir:value "HospitalNotification-MORS1" ];
     fhir:TestScript.test.description [ fhir:value "GET a Hospital notification MORS. The expected response is a 200(OK) with a payload of the Hospital notification resource in XML format." ];
     fhir:TestScript.test.action [
       fhir:index 0;
       fhir:TestScript.test.action.operation [
         fhir:TestScript.setup.action.operation.type [
           fhir:Coding.system [ fhir:value "http://terminology.hl7.org/CodeSystem/testscript-operation-codes" ];
           fhir:Coding.code [ fhir:value "read" ]
         ];
         fhir:TestScript.setup.action.operation.resource [ fhir:value "Bundle" ];
         fhir:TestScript.setup.action.operation.description [ fhir:value "Receive notification-MORS" ];
         fhir:TestScript.setup.action.operation.accept [ fhir:value "xml" ];
         fhir:TestScript.setup.action.operation.destination [ fhir:value "1"^^xsd:integer ];
         fhir:TestScript.setup.action.operation.encodeRequestUrl [ fhir:value "true"^^xsd:boolean ];
         fhir:TestScript.setup.action.operation.origin [ fhir:value "1"^^xsd:integer ];
         fhir:TestScript.setup.action.operation.params [ fhir:value "?message.destination-uri=${destinationUri1}" ];
         fhir:TestScript.setup.action.operation.responseId [ fhir:value "bundle-get-MORS1" ]
       ]
     ], [
       fhir:index 1;
       fhir:TestScript.test.action.assert [
         fhir:TestScript.setup.action.assert.description [ fhir:value "Confirm that the returned HTTP status is 200(OK)." ];
         fhir:TestScript.setup.action.assert.direction [ fhir:value "response" ];
         fhir:TestScript.setup.action.assert.responseCode [ fhir:value "200" ];
         fhir:TestScript.setup.action.assert.warningOnly [ fhir:value "false"^^xsd:boolean ]
       ]
     ]
  ], [
     fhir:index 1;
     fhir:Element.id [ fhir:value "1ACK-bundle-create-MORS1" ];
     fhir:TestScript.test.name [ fhir:value "1 Post Acknowledgement-bundle-create-MORS1" ];
     fhir:TestScript.test.description [ fhir:value "GET ACK" ];
     fhir:TestScript.test.action [
       fhir:index 0;
       fhir:TestScript.test.action.operation [
         fhir:TestScript.setup.action.operation.type [
           fhir:Coding.system [ fhir:value "http://terminology.hl7.org/CodeSystem/testscript-operation-codes" ];
           fhir:Coding.code [ fhir:value "create" ]
         ];
         fhir:TestScript.setup.action.operation.resource [ fhir:value "Bundle" ];
         fhir:TestScript.setup.action.operation.description [ fhir:value "Post a acknowledgement" ];
         fhir:TestScript.setup.action.operation.accept [ fhir:value "xml" ];
         fhir:TestScript.setup.action.operation.destination [ fhir:value "1"^^xsd:integer ];
         fhir:TestScript.setup.action.operation.encodeRequestUrl [ fhir:value "true"^^xsd:boolean ];
         fhir:TestScript.setup.action.operation.origin [ fhir:value "1"^^xsd:integer ];
         fhir:TestScript.setup.action.operation.sourceId [ fhir:value "bundle-create-ack-OK" ]
       ]
     ], [
       fhir:index 1;
       fhir:TestScript.test.action.assert [
         fhir:TestScript.setup.action.assert.description [ fhir:value "Confirm that the client request payload contains a Bundle resource type." ];
         fhir:TestScript.setup.action.assert.direction [ fhir:value "request" ];
         fhir:TestScript.setup.action.assert.resource [ fhir:value "Bundle" ];
         fhir:TestScript.setup.action.assert.warningOnly [ fhir:value "false"^^xsd:boolean ]
       ]
     ], [
       fhir:index 2;
       fhir:TestScript.test.action.assert [
         fhir:TestScript.setup.action.assert.description [ fhir:value "Confirm that the MessageHeader response code is OK" ];
         fhir:TestScript.setup.action.assert.direction [ fhir:value "request" ];
         fhir:TestScript.setup.action.assert.expression [ fhir:value "Bundle.entry.resource.ofType(MessageHeader).response.code" ];
         fhir:TestScript.setup.action.assert.operator [ fhir:value "equals" ];
         fhir:TestScript.setup.action.assert.value [ fhir:value "ok" ];
         fhir:TestScript.setup.action.assert.warningOnly [ fhir:value "false"^^xsd:boolean ]
       ]
     ], [
       fhir:index 3;
       fhir:TestScript.test.action.assert [
         fhir:TestScript.setup.action.assert.description [ fhir:value "Confirm that the request resource contains the expected evetCoding code." ];
         fhir:TestScript.setup.action.assert.direction [ fhir:value "request" ];
         fhir:TestScript.setup.action.assert.expression [ fhir:value "Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'acknowledgment-message').allTrue()" ];
         fhir:TestScript.setup.action.assert.warningOnly [ fhir:value "false"^^xsd:boolean ]
       ]
     ], [
       fhir:index 4;
       fhir:TestScript.test.action.assert [
         fhir:TestScript.setup.action.assert.description [ fhir:value "Confirm that the Bundle not containing a OperationOutcome" ];
         fhir:TestScript.setup.action.assert.direction [ fhir:value "request" ];
         fhir:TestScript.setup.action.assert.expression [ fhir:value "Bundle.entry.resource.ofType(OperationOutcome).exists().not()" ];
         fhir:TestScript.setup.action.assert.warningOnly [ fhir:value "false"^^xsd:boolean ]
       ]
     ], [
       fhir:index 5;
       fhir:TestScript.test.action.assert [
         fhir:TestScript.setup.action.assert.description [ fhir:value "Confirm that the MessageHeader.response.identifier is equal to Id of original message " ];
         fhir:TestScript.setup.action.assert.direction [ fhir:value "request" ];
         fhir:TestScript.setup.action.assert.expression [ fhir:value "Bundle.entry.resource.ofType(MessageHeader).response.identifier" ];
         fhir:TestScript.setup.action.assert.operator [ fhir:value "equals" ];
         fhir:TestScript.setup.action.assert.value [ fhir:value "${correctMessageID1}" ];
         fhir:TestScript.setup.action.assert.warningOnly [ fhir:value "false"^^xsd:boolean ]
       ]
     ], [
       fhir:index 6;
       fhir:TestScript.test.action.assert [
         fhir:TestScript.setup.action.assert.description [ fhir:value "Confirm that the reference original Provenance.entity.what is equal to Id of original messageheader.identifier" ];
         fhir:TestScript.setup.action.assert.direction [ fhir:value "request" ];
         fhir:TestScript.setup.action.assert.expression [ fhir:value "Bundle.entry.resource.ofType(Provenance).where(entity.what.reference ='${MessageHeaderIdentifier1}')" ];
         fhir:TestScript.setup.action.assert.warningOnly [ fhir:value "false"^^xsd:boolean ]
       ]
     ], [
       fhir:index 7;
       fhir:TestScript.test.action.assert [
         fhir:TestScript.setup.action.assert.description [ fhir:value "Confirm that the there are two Provenances" ];
         fhir:TestScript.setup.action.assert.direction [ fhir:value "request" ];
         fhir:TestScript.setup.action.assert.expression [ fhir:value "Bundle.entry.resource.ofType(Provenance).count() = 2" ];
         fhir:TestScript.setup.action.assert.warningOnly [ fhir:value "false"^^xsd:boolean ]
       ]
     ], [
       fhir:index 8;
       fhir:TestScript.test.action.assert [
         fhir:TestScript.setup.action.assert.description [ fhir:value "Confirm that the id of the original message provenance exist in the ack" ];
         fhir:TestScript.setup.action.assert.direction [ fhir:value "request" ];
         fhir:TestScript.setup.action.assert.expression [ fhir:value "Bundle.entry.resource.ofType(Provenance).where(id='${ProvenanceID1}').exists()" ];
         fhir:TestScript.setup.action.assert.warningOnly [ fhir:value "false"^^xsd:boolean ]
       ]
     ]
  ] .

# - ontology header ------------------------------------------------------------

<http://example.org/fhir/fish/TestScript/UFHV13-with-ACK.ttl> a owl:Ontology;
  owl:imports fhir:fhir.ttl .

# -------------------------------------------------------------------------------------

