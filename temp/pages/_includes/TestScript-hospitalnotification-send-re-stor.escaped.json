{&quot;resourceType&quot;:&quot;TestScript&quot;,&quot;id&quot;:&quot;hospitalnotification-send-re-stor&quot;,&quot;meta&quot;:{&quot;profile&quot;:[&quot;http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript&quot;]},&quot;text&quot;:{&quot;status&quot;:&quot;generated&quot;,&quot;div&quot;:&quot;&lt;div xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot;&gt;&lt;p&gt;&lt;b&gt;Generated Narrative: TestScript&lt;/b&gt;&lt;a name=\&quot;hospitalnotification-send-re-stor\&quot;&gt; &lt;/a&gt;&lt;/p&gt;&lt;div style=\&quot;display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\&quot;&gt;&lt;p style=\&quot;margin-bottom: 0px\&quot;&gt;Resource TestScript &amp;quot;hospitalnotification-send-re-stor&amp;quot; &lt;/p&gt;&lt;p style=\&quot;margin-bottom: 0px\&quot;&gt;Profile: &lt;code&gt;http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;url&lt;/b&gt;: &lt;code&gt;http://medcomfhir.dk/ig/hospitalnotificationtestscript/hospitalnotification-send-re-stor&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;version&lt;/b&gt;: 1.0.0&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: HospitalNotificationTestScript&lt;/p&gt;&lt;p&gt;&lt;b&gt;title&lt;/b&gt;: Send: Update Start leave - RE_STOR&lt;/p&gt;&lt;p&gt;&lt;b&gt;status&lt;/b&gt;: active&lt;/p&gt;&lt;p&gt;&lt;b&gt;date&lt;/b&gt;: 2023-05-01&lt;/p&gt;&lt;p&gt;&lt;b&gt;publisher&lt;/b&gt;: MedCom&lt;/p&gt;&lt;p&gt;&lt;b&gt;contact&lt;/b&gt;: MedCom: &lt;a href=\&quot;mailto:mailto:fhir@medcom.dk\&quot;&gt;mailto:fhir@medcom.dk&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt;: Send: Update Start leave&lt;/p&gt;&lt;p&gt;&lt;b&gt;copyright&lt;/b&gt;: MedCom 2021&lt;/p&gt;&lt;h3&gt;Origins&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Index&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Profile&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;FHIR Client (Details: http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types code FHIR-Client = 'FHIR Client', stated as 'null')&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;h3&gt;Destinations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Index&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Profile&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;FHIR Server (Details: http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types code FHIR-Server = 'FHIR Server', stated as 'null')&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;fixture&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;id&lt;/b&gt;&lt;/p&gt;create-STIN-01&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;autocreate&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;autodelete&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;resource&lt;/b&gt;: &lt;a href=\&quot;/FHIRSandbox/MedCom/HospitalNotification/v300/Send/Fixtures/HospitalNotification-fixture.xml\&quot;&gt;/FHIRSandbox/MedCom/HospitalNotification/v300/Send/Fixtures/HospitalNotification-fixture.xml&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;fixture&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;id&lt;/b&gt;&lt;/p&gt;create-STOR-02&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;autocreate&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;autodelete&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;resource&lt;/b&gt;: &lt;a href=\&quot;/FHIRSandbox/MedCom/HospitalNotification/v300/Send/Fixtures/HospitalNotification-fixture.xml\&quot;&gt;/FHIRSandbox/MedCom/HospitalNotification/v300/Send/Fixtures/HospitalNotification-fixture.xml&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;fixture&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;id&lt;/b&gt;&lt;/p&gt;create-RE-STOR-03&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;autocreate&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;autodelete&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;resource&lt;/b&gt;: &lt;a href=\&quot;/FHIRSandbox/MedCom/HospitalNotification/v300/Send/Fixtures/HospitalNotification-fixture.xml\&quot;&gt;/FHIRSandbox/MedCom/HospitalNotification/v300/Send/Fixtures/HospitalNotification-fixture.xml&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;profile&lt;/b&gt;: &lt;a href=\&quot;http://medcomfhir.dk/ig/hospitalnotification/StructureDefinition/medcom-hospitalNotification-message\&quot;&gt;http://medcomfhir.dk/ig/hospitalnotification/StructureDefinition/medcom-hospitalNotification-message&lt;/a&gt; &amp;quot;MedComHospitalNotificationMessage&amp;quot;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: messageHeaderid-STIN&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry[0].fullUrl&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: create-message-STIN&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: episodeOfCareID-STIN&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: create-message-STIN&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: searchParamIdentifier-STIN&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(MessageHeader).id&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: create-message-STIN&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: occurredDateTime-STIN&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(Provenance).where(target.reference = %resource.entry[0].fullUrl).occurred&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: create-message-STIN&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: messageHeaderid-STOR&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry[0].fullUrl&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: create-message-STOR&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: episodeOfCareID-STOR&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: create-message-STOR&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: messageHeaderid-RE-STOR&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry[0].fullUrl&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: create-message-RE-STOR&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: episodeOfCareID-RE-STOR&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: create-message-RE-STOR&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;test&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;id&lt;/b&gt;&lt;/p&gt;hospitalnotification-create-STIN-01&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: Create a HospitalNotification STIN Message 01&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt;: Post HospitalNotification to the server.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Destination&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Origin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ResponseId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;SourceId&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;Post a Hospitalnotification&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;create-message-STIN&lt;/td&gt;&lt;td&gt;create-STIN-01&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ResponseCode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the returned HTTP status is okay or created.&lt;/td&gt;&lt;td&gt;response&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;200,201&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the client request payload contains a Bundle resource type.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the request resource contains the expected eventCoding.code.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the Encounter class of the request resource is IMP.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Encounter).class.code&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;IMP&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the Encounter status of the request resource is in-progress.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Encounter).status&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;in-progress&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the request resource contains the expected activity code.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(activity.coding.code = 'admit-inpatient').exists()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the report of admission flag is true.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).extension.where(url='http://medcomfhir.dk/ig/hospitalnotification/StructureDefinition/medcom-messaging-reportOfAdmissionExtension').value&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the target reference in Provenance equals MessageHeader.id&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(target.reference = %resource.entry[0].fullUrl).exists()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the episodeOfCare-identifier has the structure of an UUID&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value.matches('[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}')&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the a receiver of the report of admission exists, when the flag is true, and doesn't exists when the flag is false.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).extension.where(url='http://medcomfhir.dk/ig/hospitalnotification/StructureDefinition/medcom-messaging-reportOfAdmissionRecipientExtension').exists() = true&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;test&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;id&lt;/b&gt;&lt;/p&gt;hospitalnotification-create-STOR-02&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: Create a HospitalNotification STOR Message 02&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt;: Post HospitalNotification to the server.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Destination&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Origin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ResponseId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;SourceId&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;Post a Hospitalnotification&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;create-message-STOR&lt;/td&gt;&lt;td&gt;create-STOR-02&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ResponseCode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the returned HTTP status is okay or created.&lt;/td&gt;&lt;td&gt;response&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;200,201&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the client request payload contains a Bundle resource type.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the previous MessageHeader fullURL is identical to Provenance.entity.what&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(entity.what.reference = '${messageHeaderid-STIN}').count() = 1&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the request resource contains the expected eventCoding.code.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the role is set to revision. Not used when testing the first message in a stream&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).entity.role&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;revision&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the Encounter class of the request resource is IMP.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Encounter).class.code&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;IMP&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the Encounter status of the request resource is onleave.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Encounter).status&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;onleave&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the request resource contains the expected activity code.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(activity.coding.code = 'start-leave-inpatient').exists()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the target reference in Provenance equals MessageHeader.id&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(target.reference = %resource.entry[0].fullUrl).exists()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the 2 Provenance instances exists.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).count()&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the episodeOfCare-identifier is episodeOfCareID-STIN&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Encounter).where(episodeOfCare.identifier.value = '${episodeOfCareID-STIN}').count() = 1&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;test&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;id&lt;/b&gt;&lt;/p&gt;hospitalnotification-create-RE-STOR-03&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: Create a HospitalNotification RE-STOR Message 03&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt;: Post HospitalNotification to the server.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Destination&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Origin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ResponseId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;SourceId&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;Post a Hospitalnotification&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;create-message-RE-STOR&lt;/td&gt;&lt;td&gt;create-RE-STOR-03&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ResponseCode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the returned HTTP status is okay or created.&lt;/td&gt;&lt;td&gt;response&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;200,201&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the client request payload contains a Bundle resource type.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the previous MessageHeader fullURL is identical to Provenance.entity.what&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(entity.what.reference = '${messageHeaderid-STOR}').count() = 1&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the request resource contains the expected eventCoding.code.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the role is set to revision. Not used when testing the first message in a stream&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).entity.role&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;revision&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the Encounter class of the request resource is IMP.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Encounter).class.code&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;IMP&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the Encounter status of the request resource is onleave.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Encounter).status&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;onleave&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the request resource contains the expected activity code.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(activity.coding.code = 'revise-start-leave-inpatient').exists()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the target reference in Provenance equals MessageHeader.id&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(target.reference = %resource.entry[0].fullUrl).exists()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the 3 Provenance instances exists.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).count()&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the episodeOfCare-identifier is episodeOfCareID-STOR&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Encounter).where(episodeOfCare.identifier.value = '${episodeOfCareID-STOR}').count() = 1&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/div&gt;&quot;},&quot;url&quot;:&quot;http://medcomfhir.dk/ig/hospitalnotificationtestscript/hospitalnotification-send-re-stor&quot;,&quot;version&quot;:&quot;1.0.0&quot;,&quot;name&quot;:&quot;HospitalNotificationTestScript&quot;,&quot;title&quot;:&quot;Send: Update Start leave - RE_STOR&quot;,&quot;status&quot;:&quot;active&quot;,&quot;date&quot;:&quot;2023-05-01&quot;,&quot;publisher&quot;:&quot;MedCom&quot;,&quot;contact&quot;:[{&quot;name&quot;:&quot;MedCom&quot;,&quot;telecom&quot;:[{&quot;system&quot;:&quot;email&quot;,&quot;value&quot;:&quot;mailto:fhir@medcom.dk&quot;}]}],&quot;description&quot;:&quot;Send: Update Start leave&quot;,&quot;copyright&quot;:&quot;MedCom 2021&quot;,&quot;origin&quot;:[{&quot;index&quot;:1,&quot;profile&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types&quot;,&quot;code&quot;:&quot;FHIR-Client&quot;}}],&quot;destination&quot;:[{&quot;index&quot;:1,&quot;profile&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types&quot;,&quot;code&quot;:&quot;FHIR-Server&quot;}}],&quot;fixture&quot;:[{&quot;id&quot;:&quot;create-STIN-01&quot;,&quot;autocreate&quot;:false,&quot;autodelete&quot;:false,&quot;resource&quot;:{&quot;reference&quot;:&quot;/FHIRSandbox/MedCom/HospitalNotification/v300/Send/Fixtures/HospitalNotification-fixture.xml&quot;}},{&quot;id&quot;:&quot;create-STOR-02&quot;,&quot;autocreate&quot;:false,&quot;autodelete&quot;:false,&quot;resource&quot;:{&quot;reference&quot;:&quot;/FHIRSandbox/MedCom/HospitalNotification/v300/Send/Fixtures/HospitalNotification-fixture.xml&quot;}},{&quot;id&quot;:&quot;create-RE-STOR-03&quot;,&quot;autocreate&quot;:false,&quot;autodelete&quot;:false,&quot;resource&quot;:{&quot;reference&quot;:&quot;/FHIRSandbox/MedCom/HospitalNotification/v300/Send/Fixtures/HospitalNotification-fixture.xml&quot;}}],&quot;profile&quot;:[{&quot;id&quot;:&quot;hospitalnotification&quot;,&quot;reference&quot;:&quot;http://medcomfhir.dk/ig/hospitalnotification/StructureDefinition/medcom-hospitalNotification-message&quot;}],&quot;variable&quot;:[{&quot;name&quot;:&quot;messageHeaderid-STIN&quot;,&quot;expression&quot;:&quot;Bundle.entry[0].fullUrl&quot;,&quot;sourceId&quot;:&quot;create-message-STIN&quot;},{&quot;name&quot;:&quot;episodeOfCareID-STIN&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value&quot;,&quot;sourceId&quot;:&quot;create-message-STIN&quot;},{&quot;name&quot;:&quot;searchParamIdentifier-STIN&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).id&quot;,&quot;sourceId&quot;:&quot;create-message-STIN&quot;},{&quot;name&quot;:&quot;occurredDateTime-STIN&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(target.reference = %resource.entry[0].fullUrl).occurred&quot;,&quot;sourceId&quot;:&quot;create-message-STIN&quot;},{&quot;name&quot;:&quot;messageHeaderid-STOR&quot;,&quot;expression&quot;:&quot;Bundle.entry[0].fullUrl&quot;,&quot;sourceId&quot;:&quot;create-message-STOR&quot;},{&quot;name&quot;:&quot;episodeOfCareID-STOR&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value&quot;,&quot;sourceId&quot;:&quot;create-message-STOR&quot;},{&quot;name&quot;:&quot;messageHeaderid-RE-STOR&quot;,&quot;expression&quot;:&quot;Bundle.entry[0].fullUrl&quot;,&quot;sourceId&quot;:&quot;create-message-RE-STOR&quot;},{&quot;name&quot;:&quot;episodeOfCareID-RE-STOR&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value&quot;,&quot;sourceId&quot;:&quot;create-message-RE-STOR&quot;}],&quot;test&quot;:[{&quot;id&quot;:&quot;hospitalnotification-create-STIN-01&quot;,&quot;name&quot;:&quot;Create a HospitalNotification STIN Message 01&quot;,&quot;description&quot;:&quot;Post HospitalNotification to the server.&quot;,&quot;action&quot;:[{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;create&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;Post a Hospitalnotification&quot;,&quot;destination&quot;:1,&quot;encodeRequestUrl&quot;:true,&quot;origin&quot;:1,&quot;responseId&quot;:&quot;create-message-STIN&quot;,&quot;sourceId&quot;:&quot;create-STIN-01&quot;}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the returned HTTP status is okay or created.&quot;,&quot;direction&quot;:&quot;response&quot;,&quot;operator&quot;:&quot;in&quot;,&quot;responseCode&quot;:&quot;200,201&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the client request payload contains a Bundle resource type.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;resource&quot;:&quot;Bundle&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the request resource contains the expected eventCoding.code.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the Encounter class of the request resource is IMP.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).class.code&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;IMP&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the Encounter status of the request resource is in-progress.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).status&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;in-progress&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the request resource contains the expected activity code.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(activity.coding.code = 'admit-inpatient').exists()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the report of admission flag is true.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).extension.where(url='http://medcomfhir.dk/ig/hospitalnotification/StructureDefinition/medcom-messaging-reportOfAdmissionExtension').value&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;true&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the target reference in Provenance equals MessageHeader.id&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(target.reference = %resource.entry[0].fullUrl).exists()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the episodeOfCare-identifier has the structure of an UUID&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value.matches('[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}')&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the a receiver of the report of admission exists, when the flag is true, and doesn't exists when the flag is false.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).extension.where(url='http://medcomfhir.dk/ig/hospitalnotification/StructureDefinition/medcom-messaging-reportOfAdmissionRecipientExtension').exists() = true&quot;,&quot;warningOnly&quot;:false}}]},{&quot;id&quot;:&quot;hospitalnotification-create-STOR-02&quot;,&quot;name&quot;:&quot;Create a HospitalNotification STOR Message 02&quot;,&quot;description&quot;:&quot;Post HospitalNotification to the server.&quot;,&quot;action&quot;:[{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;create&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;Post a Hospitalnotification&quot;,&quot;destination&quot;:1,&quot;encodeRequestUrl&quot;:true,&quot;origin&quot;:1,&quot;responseId&quot;:&quot;create-message-STOR&quot;,&quot;sourceId&quot;:&quot;create-STOR-02&quot;}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the returned HTTP status is okay or created.&quot;,&quot;direction&quot;:&quot;response&quot;,&quot;operator&quot;:&quot;in&quot;,&quot;responseCode&quot;:&quot;200,201&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the client request payload contains a Bundle resource type.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;resource&quot;:&quot;Bundle&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the previous MessageHeader fullURL is identical to Provenance.entity.what&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(entity.what.reference = '${messageHeaderid-STIN}').count() = 1&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the request resource contains the expected eventCoding.code.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the role is set to revision. Not used when testing the first message in a stream&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).entity.role&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;revision&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the Encounter class of the request resource is IMP.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).class.code&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;IMP&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the Encounter status of the request resource is onleave.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).status&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;onleave&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the request resource contains the expected activity code.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(activity.coding.code = 'start-leave-inpatient').exists()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the target reference in Provenance equals MessageHeader.id&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(target.reference = %resource.entry[0].fullUrl).exists()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the 2 Provenance instances exists.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).count()&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;2&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the episodeOfCare-identifier is episodeOfCareID-STIN&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).where(episodeOfCare.identifier.value = '${episodeOfCareID-STIN}').count() = 1&quot;,&quot;warningOnly&quot;:false}}]},{&quot;id&quot;:&quot;hospitalnotification-create-RE-STOR-03&quot;,&quot;name&quot;:&quot;Create a HospitalNotification RE-STOR Message 03&quot;,&quot;description&quot;:&quot;Post HospitalNotification to the server.&quot;,&quot;action&quot;:[{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;create&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;Post a Hospitalnotification&quot;,&quot;destination&quot;:1,&quot;encodeRequestUrl&quot;:true,&quot;origin&quot;:1,&quot;responseId&quot;:&quot;create-message-RE-STOR&quot;,&quot;sourceId&quot;:&quot;create-RE-STOR-03&quot;}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the returned HTTP status is okay or created.&quot;,&quot;direction&quot;:&quot;response&quot;,&quot;operator&quot;:&quot;in&quot;,&quot;responseCode&quot;:&quot;200,201&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the client request payload contains a Bundle resource type.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;resource&quot;:&quot;Bundle&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the previous MessageHeader fullURL is identical to Provenance.entity.what&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(entity.what.reference = '${messageHeaderid-STOR}').count() = 1&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the request resource contains the expected eventCoding.code.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the role is set to revision. Not used when testing the first message in a stream&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).entity.role&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;revision&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the Encounter class of the request resource is IMP.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).class.code&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;IMP&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the Encounter status of the request resource is onleave.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).status&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;onleave&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the request resource contains the expected activity code.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(activity.coding.code = 'revise-start-leave-inpatient').exists()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the target reference in Provenance equals MessageHeader.id&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(target.reference = %resource.entry[0].fullUrl).exists()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the 3 Provenance instances exists.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).count()&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;3&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the episodeOfCare-identifier is episodeOfCareID-STOR&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Encounter).where(episodeOfCare.identifier.value = '${episodeOfCareID-STOR}').count() = 1&quot;,&quot;warningOnly&quot;:false}}]}]}