{&quot;resourceType&quot;:&quot;TestScript&quot;,&quot;id&quot;:&quot;UFHV01-with-ACK&quot;,&quot;meta&quot;:{&quot;profile&quot;:[&quot;http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript&quot;]},&quot;text&quot;:{&quot;status&quot;:&quot;generated&quot;,&quot;div&quot;:&quot;&lt;div xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot;&gt;&lt;p&gt;&lt;b&gt;Generated Narrative&lt;/b&gt;&lt;/p&gt;&lt;div style=\&quot;display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\&quot;&gt;&lt;p style=\&quot;margin-bottom: 0px\&quot;&gt;Resource \&quot;UFHV01-with-ACK\&quot; &lt;/p&gt;&lt;p style=\&quot;margin-bottom: 0px\&quot;&gt;Profile: &lt;code&gt;http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;url&lt;/b&gt;: &lt;code&gt;http://build.fhir.org/ig/hl7dk/dk-medcom/&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;version&lt;/b&gt;: 0.1.0&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: receive-notification-about-admission&lt;/p&gt;&lt;p&gt;&lt;b&gt;title&lt;/b&gt;: hospitalNotification-message admit-inpatient receiving XML&lt;/p&gt;&lt;p&gt;&lt;b&gt;status&lt;/b&gt;: active&lt;/p&gt;&lt;p&gt;&lt;b&gt;date&lt;/b&gt;: 2021-11-01&lt;/p&gt;&lt;p&gt;&lt;b&gt;publisher&lt;/b&gt;: MedCom&lt;/p&gt;&lt;p&gt;&lt;b&gt;contact&lt;/b&gt;: MedCom: &lt;a href=\&quot;mailto:fhir@medcom.dk\&quot;&gt;fhir@medcom.dk&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt;: Testing correct use of status admit-inpatient&lt;/p&gt;&lt;p&gt;&lt;b&gt;copyright&lt;/b&gt;: MedCom 2021&lt;/p&gt;&lt;h3&gt;Origins&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Index&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Profile&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;FHIR Client (Details: http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types code FHIR-Client = 'FHIR Client', stated as 'null')&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;h3&gt;Destinations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Index&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Profile&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;FHIR Server (Details: http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types code FHIR-Server = 'FHIR Server', stated as 'null')&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;fixture&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;autocreate&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;autodelete&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;resource&lt;/b&gt;: &lt;a href=\&quot;/FHIRSandbox/MedCom/401-Acknowledgement/_reference/resources/Acknowledgement-ok.xml\&quot;&gt;/FHIRSandbox/MedCom/401-Acknowledgement/_reference/resources/Acknowledgement-ok.xml&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;fixture&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;autocreate&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;autodelete&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;resource&lt;/b&gt;: &lt;a href=\&quot;/FHIRSandbox/MedCom/401-Hospitalnotification/receive/Userstory/_reference/resources/HospitalNotificationMessage-STIN-K1.xml\&quot;&gt;/FHIRSandbox/MedCom/401-Hospitalnotification/receive/Userstory/_reference/resources/HospitalNotificationMessage-STIN-K1.xml&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;fixture&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;autocreate&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;autodelete&lt;/b&gt;: false&lt;/p&gt;&lt;p&gt;&lt;b&gt;resource&lt;/b&gt;: &lt;a href=\&quot;/FHIRSandbox/MedCom/401-Hospitalnotification/receive/Userstory/_reference/resources/HospitalNotificationMessage-SLHJ-K3.xml\&quot;&gt;/FHIRSandbox/MedCom/401-Hospitalnotification/receive/Userstory/_reference/resources/HospitalNotificationMessage-SLHJ-K3.xml&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;profile&lt;/b&gt;: &lt;a href=\&quot;http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-hospitalNotification-message\&quot;&gt;http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-hospitalNotification-message&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: destinationUri1&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(MessageHeader).destination.endpoint&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: bundle-create-STIN1&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: correctMessageID1&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(Bundle).id&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: bundle-get-STIN1&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: MessageHeaderIdentifier1&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry[0].fullUrl&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: bundle-create-STIN1&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: ProvenanceID1&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(Provenance).id&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: bundle-create-STIN1&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: destinationUri2&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(MessageHeader).destination.endpoint&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: bundle-create-SLHJ2&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: correctMessageID2&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(Bundle).id&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: bundle-get-SLHJ2&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: MessageHeaderIdentifier2&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry[0].fullUrl&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: bundle-create-SLHJ2&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: ProvenanceID2&lt;/p&gt;&lt;p&gt;&lt;b&gt;expression&lt;/b&gt;: Bundle.entry.resource.ofType(Provenance).id&lt;/p&gt;&lt;p&gt;&lt;b&gt;sourceId&lt;/b&gt;: bundle-create-SLHJ2&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;setup&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accept&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Params&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Delete (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code delete = 'Delete', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;System-generated search and delete operations from conditional delete on Bundle MessageHeader).destination.endpoint&lt;/td&gt;&lt;td&gt;xml&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;?message.destination-uri=${destinationUri1}&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accept&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ContentType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;SourceId&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;Create the Bundle resource in XML format on the destination server.&lt;/td&gt;&lt;td&gt;xml&lt;/td&gt;&lt;td&gt;xml&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;bundle-create-STIN1&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accept&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Params&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Delete (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code delete = 'Delete', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;System-generated search and delete operations from conditional delete on Bundle MessageHeader).destination.endpoint&lt;/td&gt;&lt;td&gt;xml&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;?message.destination-uri=${destinationUri2}&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accept&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ContentType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;SourceId&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;Create the Bundle resource in XML format on the destination server.&lt;/td&gt;&lt;td&gt;xml&lt;/td&gt;&lt;td&gt;xml&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;bundle-create-SLHJ2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;test&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: HospitalNotification-STIN1&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt;: GET a Hospital notification STIN. The expected response is a 200(OK) with a payload of the Hospital notification resource in XML format.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accept&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Destination&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Origin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Params&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ResponseId&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Read (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code read = 'Read', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;Receive notification-STIN&lt;/td&gt;&lt;td&gt;xml&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;?message.destination-uri=${destinationUri1}&lt;/td&gt;&lt;td&gt;bundle-get-STIN1&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ResponseCode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the returned HTTP status is 200(OK).&lt;/td&gt;&lt;td&gt;response&lt;/td&gt;&lt;td&gt;200&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;test&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: 1 Post Acknowledgement-bundle-create-STIN1&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt;: GET ACK&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accept&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Destination&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Origin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;SourceId&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;Post a acknowledgement&lt;/td&gt;&lt;td&gt;xml&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;bundle-create-ack-OK&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the client request payload contains a Bundle resource type.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the MessageHeader response code is OK&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).response.code&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;ok&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the request resource contains the expected evetCoding code.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'acknowledgment-message').allTrue()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the Bundle not containing a OperationOutcome&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(OperationOutcome).exists().not()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the MessageHeader.response.identifier is equal to Id of original message &lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).response.identifier&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;${correctMessageID1}&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the reference original Provenance.entity.what is equal to Id of original messageheader.identifier&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(entity.what.reference ='${MessageHeaderIdentifier1}')&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the there are two Provenances&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).count() = 2&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the id of the original message provenance exist in the ack&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(id='${ProvenanceID1}').exists()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;test&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: HospitalNotification-SLHJ2&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt;: GET a Hospital notification SLHJ. The expected response is a 200(OK) with a payload of the Hospital notification resource in XML format.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accept&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Destination&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Origin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Params&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ResponseId&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Read (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code read = 'Read', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;Receive notification-SLHJ&lt;/td&gt;&lt;td&gt;xml&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;?message.destination-uri=${destinationUri2}&lt;/td&gt;&lt;td&gt;bundle-get-SLHJ2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;ResponseCode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the returned HTTP status is 200(OK).&lt;/td&gt;&lt;td&gt;response&lt;/td&gt;&lt;td&gt;200&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;test&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: 2 Post Acknowledgement-bundle-create-SLHJ2&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt;: GET ACK&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Operations&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accept&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Destination&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;EncodeRequestUrl&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Origin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;SourceId&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Create (Details: http://terminology.hl7.org/CodeSystem/testscript-operation-codes code create = 'Create', stated as 'null')&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;Post a acknowledgement&lt;/td&gt;&lt;td&gt;xml&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;bundle-create-ack-OK&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the client request payload contains a Bundle resource type.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the MessageHeader response code is OK&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).response.code&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;ok&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the request resource contains the expected evetCoding code.&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'acknowledgment-message').allTrue()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the Bundle not containing a OperationOutcome&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(OperationOutcome).exists().not()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Operator&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the MessageHeader.response.identifier is equal to Id of original message &lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(MessageHeader).response.identifier&lt;/td&gt;&lt;td&gt;equals&lt;/td&gt;&lt;td&gt;${correctMessageID2}&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the reference original Provenance.entity.what is equal to Id of original messageheader.identifier&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(entity.what.reference ='${MessageHeaderIdentifier2}')&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the there are two Provenances&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).count() = 2&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;action&lt;/b&gt;&lt;/p&gt;&lt;h3&gt;Asserts&lt;/h3&gt;&lt;table class=\&quot;grid\&quot;&gt;&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Expression&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;WarningOnly&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;Confirm that the id of the original message provenance exist in the ack&lt;/td&gt;&lt;td&gt;request&lt;/td&gt;&lt;td&gt;Bundle.entry.resource.ofType(Provenance).where(id='${ProvenanceID2}').exists()&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/div&gt;&quot;},&quot;url&quot;:&quot;http://build.fhir.org/ig/hl7dk/dk-medcom/&quot;,&quot;version&quot;:&quot;0.1.0&quot;,&quot;name&quot;:&quot;receive-notification-about-admission&quot;,&quot;title&quot;:&quot;hospitalNotification-message admit-inpatient receiving XML&quot;,&quot;status&quot;:&quot;active&quot;,&quot;date&quot;:&quot;2021-11-01&quot;,&quot;publisher&quot;:&quot;MedCom&quot;,&quot;contact&quot;:[{&quot;name&quot;:&quot;MedCom&quot;,&quot;telecom&quot;:[{&quot;system&quot;:&quot;email&quot;,&quot;value&quot;:&quot;fhir@medcom.dk&quot;}]}],&quot;description&quot;:&quot;Testing correct use of status admit-inpatient&quot;,&quot;copyright&quot;:&quot;MedCom 2021&quot;,&quot;origin&quot;:[{&quot;index&quot;:1,&quot;profile&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types&quot;,&quot;code&quot;:&quot;FHIR-Client&quot;}}],&quot;destination&quot;:[{&quot;index&quot;:1,&quot;profile&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types&quot;,&quot;code&quot;:&quot;FHIR-Server&quot;}}],&quot;fixture&quot;:[{&quot;id&quot;:&quot;bundle-create-ack-OK&quot;,&quot;autocreate&quot;:false,&quot;autodelete&quot;:false,&quot;resource&quot;:{&quot;reference&quot;:&quot;/FHIRSandbox/MedCom/401-Acknowledgement/_reference/resources/Acknowledgement-ok.xml&quot;}},{&quot;id&quot;:&quot;bundle-create-STIN1&quot;,&quot;autocreate&quot;:false,&quot;autodelete&quot;:false,&quot;resource&quot;:{&quot;reference&quot;:&quot;/FHIRSandbox/MedCom/401-Hospitalnotification/receive/Userstory/_reference/resources/HospitalNotificationMessage-STIN-K1.xml&quot;}},{&quot;id&quot;:&quot;bundle-create-SLHJ2&quot;,&quot;autocreate&quot;:false,&quot;autodelete&quot;:false,&quot;resource&quot;:{&quot;reference&quot;:&quot;/FHIRSandbox/MedCom/401-Hospitalnotification/receive/Userstory/_reference/resources/HospitalNotificationMessage-SLHJ-K3.xml&quot;}}],&quot;profile&quot;:[{&quot;id&quot;:&quot;hospitalnotification-profile&quot;,&quot;reference&quot;:&quot;http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-hospitalNotification-message&quot;}],&quot;variable&quot;:[{&quot;name&quot;:&quot;destinationUri1&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).destination.endpoint&quot;,&quot;sourceId&quot;:&quot;bundle-create-STIN1&quot;},{&quot;name&quot;:&quot;correctMessageID1&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Bundle).id&quot;,&quot;sourceId&quot;:&quot;bundle-get-STIN1&quot;},{&quot;name&quot;:&quot;MessageHeaderIdentifier1&quot;,&quot;expression&quot;:&quot;Bundle.entry[0].fullUrl&quot;,&quot;sourceId&quot;:&quot;bundle-create-STIN1&quot;},{&quot;name&quot;:&quot;ProvenanceID1&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).id&quot;,&quot;sourceId&quot;:&quot;bundle-create-STIN1&quot;},{&quot;name&quot;:&quot;destinationUri2&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).destination.endpoint&quot;,&quot;sourceId&quot;:&quot;bundle-create-SLHJ2&quot;},{&quot;name&quot;:&quot;correctMessageID2&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Bundle).id&quot;,&quot;sourceId&quot;:&quot;bundle-get-SLHJ2&quot;},{&quot;name&quot;:&quot;MessageHeaderIdentifier2&quot;,&quot;expression&quot;:&quot;Bundle.entry[0].fullUrl&quot;,&quot;sourceId&quot;:&quot;bundle-create-SLHJ2&quot;},{&quot;name&quot;:&quot;ProvenanceID2&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).id&quot;,&quot;sourceId&quot;:&quot;bundle-create-SLHJ2&quot;}],&quot;setup&quot;:{&quot;action&quot;:[{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;delete&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;System-generated search and delete operations from conditional delete on Bundle MessageHeader).destination.endpoint&quot;,&quot;accept&quot;:&quot;xml&quot;,&quot;encodeRequestUrl&quot;:true,&quot;params&quot;:&quot;?message.destination-uri=${destinationUri1}&quot;}},{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;create&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;Create the Bundle resource in XML format on the destination server.&quot;,&quot;accept&quot;:&quot;xml&quot;,&quot;contentType&quot;:&quot;xml&quot;,&quot;encodeRequestUrl&quot;:true,&quot;sourceId&quot;:&quot;bundle-create-STIN1&quot;}},{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;delete&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;System-generated search and delete operations from conditional delete on Bundle MessageHeader).destination.endpoint&quot;,&quot;accept&quot;:&quot;xml&quot;,&quot;encodeRequestUrl&quot;:true,&quot;params&quot;:&quot;?message.destination-uri=${destinationUri2}&quot;}},{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;create&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;Create the Bundle resource in XML format on the destination server.&quot;,&quot;accept&quot;:&quot;xml&quot;,&quot;contentType&quot;:&quot;xml&quot;,&quot;encodeRequestUrl&quot;:true,&quot;sourceId&quot;:&quot;bundle-create-SLHJ2&quot;}}]},&quot;test&quot;:[{&quot;id&quot;:&quot;1-STIN-admitted&quot;,&quot;name&quot;:&quot;HospitalNotification-STIN1&quot;,&quot;description&quot;:&quot;GET a Hospital notification STIN. The expected response is a 200(OK) with a payload of the Hospital notification resource in XML format.&quot;,&quot;action&quot;:[{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;read&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;Receive notification-STIN&quot;,&quot;accept&quot;:&quot;xml&quot;,&quot;destination&quot;:1,&quot;encodeRequestUrl&quot;:true,&quot;origin&quot;:1,&quot;params&quot;:&quot;?message.destination-uri=${destinationUri1}&quot;,&quot;responseId&quot;:&quot;bundle-get-STIN1&quot;}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the returned HTTP status is 200(OK).&quot;,&quot;direction&quot;:&quot;response&quot;,&quot;responseCode&quot;:&quot;200&quot;,&quot;warningOnly&quot;:false}}]},{&quot;id&quot;:&quot;1ACK-bundle-create-STIN1&quot;,&quot;name&quot;:&quot;1 Post Acknowledgement-bundle-create-STIN1&quot;,&quot;description&quot;:&quot;GET ACK&quot;,&quot;action&quot;:[{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;create&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;Post a acknowledgement&quot;,&quot;accept&quot;:&quot;xml&quot;,&quot;destination&quot;:1,&quot;encodeRequestUrl&quot;:true,&quot;origin&quot;:1,&quot;sourceId&quot;:&quot;bundle-create-ack-OK&quot;}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the client request payload contains a Bundle resource type.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;resource&quot;:&quot;Bundle&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the MessageHeader response code is OK&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).response.code&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;ok&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the request resource contains the expected evetCoding code.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'acknowledgment-message').allTrue()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the Bundle not containing a OperationOutcome&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(OperationOutcome).exists().not()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the MessageHeader.response.identifier is equal to Id of original message &quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).response.identifier&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;${correctMessageID1}&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the reference original Provenance.entity.what is equal to Id of original messageheader.identifier&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(entity.what.reference ='${MessageHeaderIdentifier1}')&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the there are two Provenances&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).count() = 2&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the id of the original message provenance exist in the ack&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(id='${ProvenanceID1}').exists()&quot;,&quot;warningOnly&quot;:false}}]},{&quot;id&quot;:&quot;2-SLHJ-admitted&quot;,&quot;name&quot;:&quot;HospitalNotification-SLHJ2&quot;,&quot;description&quot;:&quot;GET a Hospital notification SLHJ. The expected response is a 200(OK) with a payload of the Hospital notification resource in XML format.&quot;,&quot;action&quot;:[{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;read&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;Receive notification-SLHJ&quot;,&quot;accept&quot;:&quot;xml&quot;,&quot;destination&quot;:1,&quot;encodeRequestUrl&quot;:true,&quot;origin&quot;:1,&quot;params&quot;:&quot;?message.destination-uri=${destinationUri2}&quot;,&quot;responseId&quot;:&quot;bundle-get-SLHJ2&quot;}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the returned HTTP status is 200(OK).&quot;,&quot;direction&quot;:&quot;response&quot;,&quot;responseCode&quot;:&quot;200&quot;,&quot;warningOnly&quot;:false}}]},{&quot;id&quot;:&quot;2ACK-bundle-create-SLHJ2&quot;,&quot;name&quot;:&quot;2 Post Acknowledgement-bundle-create-SLHJ2&quot;,&quot;description&quot;:&quot;GET ACK&quot;,&quot;action&quot;:[{&quot;operation&quot;:{&quot;type&quot;:{&quot;system&quot;:&quot;http://terminology.hl7.org/CodeSystem/testscript-operation-codes&quot;,&quot;code&quot;:&quot;create&quot;},&quot;resource&quot;:&quot;Bundle&quot;,&quot;description&quot;:&quot;Post a acknowledgement&quot;,&quot;accept&quot;:&quot;xml&quot;,&quot;destination&quot;:1,&quot;encodeRequestUrl&quot;:true,&quot;origin&quot;:1,&quot;sourceId&quot;:&quot;bundle-create-ack-OK&quot;}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the client request payload contains a Bundle resource type.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;resource&quot;:&quot;Bundle&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the MessageHeader response code is OK&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).response.code&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;ok&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the request resource contains the expected evetCoding code.&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'acknowledgment-message').allTrue()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the Bundle not containing a OperationOutcome&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(OperationOutcome).exists().not()&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the MessageHeader.response.identifier is equal to Id of original message &quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(MessageHeader).response.identifier&quot;,&quot;operator&quot;:&quot;equals&quot;,&quot;value&quot;:&quot;${correctMessageID2}&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the reference original Provenance.entity.what is equal to Id of original messageheader.identifier&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(entity.what.reference ='${MessageHeaderIdentifier2}')&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the there are two Provenances&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).count() = 2&quot;,&quot;warningOnly&quot;:false}},{&quot;assert&quot;:{&quot;description&quot;:&quot;Confirm that the id of the original message provenance exist in the ack&quot;,&quot;direction&quot;:&quot;request&quot;,&quot;expression&quot;:&quot;Bundle.entry.resource.ofType(Provenance).where(id='${ProvenanceID2}').exists()&quot;,&quot;warningOnly&quot;:false}}]}]}